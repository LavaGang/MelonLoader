using System.Runtime.CompilerServices;

[assembly: TypeForwardedTo(typeof(Tomlet.TomletMain))]
[assembly: TypeForwardedTo(typeof(Tomlet.TomletStringReader))]
[assembly: TypeForwardedTo(typeof(Tomlet.TomlNumberUtils))]
[assembly: TypeForwardedTo(typeof(Tomlet.TomlParser))]
[assembly: TypeForwardedTo(typeof(Tomlet.TomlSerializationMethods))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlArray))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlBoolean))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlCommentData))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlDocument))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlDouble))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlLocalDate))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlLocalDateTime))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlLocalTime))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlLong))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlOffsetDateTime))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlString))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlTable))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.TomlValue))]
[assembly: TypeForwardedTo(typeof(Tomlet.Models.ITomlValueWithDateTime))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.InvalidTomlDateTimeException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.InvalidTomlEscapeException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.InvalidTomlInlineTableException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.InvalidTomlKeyException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.InvalidTomlNumberException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.MissingIntermediateInTomlTableArraySpecException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.NewLineInTomlInlineTableException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.NoTomlKeyException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TimeOffsetOnTomlDateOrTimeException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlArraySyntaxException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlContainsDottedKeyNonTableException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlDateTimeMissingSeparatorException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlDateTimeUnnecessarySeparatorException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlDottedKeyException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlDottedKeyParserException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlDoubleDottedKeyException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlEndOfFileException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlEnumParseException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlExceptionWithLine))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlFieldTypeMismatchException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlInlineTableSeparatorException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlInstantiationException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlInternalException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlInvalidValueException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlKeyRedefinitionException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlMissingEqualsException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlMissingNewlineException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlNewlineInInlineCommentException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlNonTableArrayUsedAsTableArrayException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlNoSuchValueException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlPrimitiveToDocumentException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlStringException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlTableArrayAlreadyExistsAsNonArrayException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlTableLockedException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlTableRedefinitionException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlTripleQuotedKeyException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlTypeMismatchException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlUnescapedUnicodeControlCharException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TomlWhitespaceInKeyException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TripleQuoteInTomlMultilineLiteralException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.TripleQuoteInTomlMultilineSimpleStringException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.UnterminatedTomlKeyException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.UnterminatedTomlStringException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.UnterminatedTomlTableArrayException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Exceptions.UnterminatedTomlTableNameException))]
[assembly: TypeForwardedTo(typeof(Tomlet.Attributes.TomlDoNotInlineObjectAttribute))]
[assembly: TypeForwardedTo(typeof(Tomlet.Attributes.TomlInlineCommentAttribute))]
[assembly: TypeForwardedTo(typeof(Tomlet.Attributes.TomlPrecedingCommentAttribute))]
[assembly: TypeForwardedTo(typeof(Tomlet.Attributes.TomlPropertyAttribute))]
