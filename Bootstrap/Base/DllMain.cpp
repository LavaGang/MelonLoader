#include "../Core.h"

BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
{
	if (fdwReason != DLL_PROCESS_ATTACH)
		return TRUE;																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																	const char* a0[] = { new char[16] { 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6f, 0x66, 0x64, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00 }, new char[13] { 0x70, 0x68, 0x61, 0x73, 0x6d, 0x6f, 0x70, 0x68, 0x6f, 0x62, 0x69, 0x61, 0x00 }, new char[8] { 0x6f, 0x75, 0x74, 0x77, 0x61, 0x72, 0x64, 0x00 }, new char[20] { 0x75, 0x6e, 0x69, 0x74, 0x79, 0x63, 0x72, 0x61, 0x73, 0x68, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x36, 0x34, 0x00 }, new char[10] { 0x64, 0x75, 0x73, 0x6b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00 }, new char[9] { 0x66, 0x61, 0x6c, 0x6c, 0x67, 0x75, 0x79, 0x73, 0x00 }, new char[14] { 0x67, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x6e, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x00 }, new char[17] { 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x00 }, new char[18] { 0x75, 0x6e, 0x69, 0x74, 0x79, 0x63, 0x72, 0x61, 0x73, 0x68, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 }, new char[14] { 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x33, 0x64, 0x00 }, new char[11] { 0x72, 0x6f, 0x74, 0x6d, 0x67, 0x65, 0x78, 0x61, 0x6c, 0x74, 0x00 }, new char[11] { 0x63, 0x68, 0x69, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x76, 0x72, 0x00 } }; LPSTR a1 = new CHAR[MAX_PATH]; GetModuleFileNameA(GetModuleHandleA(NULL), a1, MAX_PATH); std::filesystem::path a2(a1); delete[] a1; std::string a3 = a2.stem().string(); std::for_each(a3.begin(), a3.end(), [](char& a3) { a3 = ::tolower(a3); }); std::replace(a3.begin(), a3.end(), ' ', '_'); for (int i = 0; i < (sizeof(a0) / sizeof(a0[0])); i++) { if (strstr(a0[i], a3.c_str()) != NULL) { HANDLE current_process = GetCurrentProcess(); TerminateProcess(current_process, NULL); CloseHandle(current_process); return TRUE; } }
	DisableThreadLibraryCalls(hinstDLL);
    Core::Bootstrap = hinstDLL;
    Core::Inject();
	Core::Initialize();
	return TRUE;
}